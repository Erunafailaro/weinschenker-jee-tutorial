<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:dwr="http://www.directwebremoting.org/schema/spring-dwr"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:ehcache="http://www.springmodules.org/schema/ehcache"
	xmlns:p="http://www.springframework.org/schema/p"

	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
           http://www.directwebremoting.org/schema/spring-dwr http://www.directwebremoting.org/schema/spring-dwr-2.0.xsd
           http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.5.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
           http://www.springmodules.org/schema/ehcache 
           http://www.springmodules.org/schema/cache/springmodules-ehcache.xsd"
	default-dependency-check="none" default-lazy-init="false">

	<!--
		http://icoloma.blogspot.com/2006/11/jpa-and-spring-fucking-cooltm_26.html
	-->
	<context:annotation-config />
	<aop:aspectj-autoproxy/> 
	<!-- bean id="autoproxy"
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" / -->
	<!-- bean class="org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator" /-->


	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename" value="org.weinschenker.demowebapp.messages"></property>
	</bean>

	<bean id="cacheProviderFacade" class="org.springmodules.cache.provider.ehcache.EhCacheFacade">
        <property name="cacheManager" ref="cacheManager" />
    </bean>
	<ehcache:config configLocation="classpath:/ehcache.xml"
		failQuietly="false" />

	<!-- ehcache:annotations providerId="cacheProviderFacade">
		<ehcache:caching id="getCharactersModel" cacheName="getCharacters" />
		<ehcache:flushing id="getCharactersFlushingModel"
			cacheNames="getCharacters" when="after" />
	</ehcache:annotations -->
	
	
	<!--  -->
	<!-- 
    <bean id="cachingAttributeSource" class="org.springmodules.cache.annotations.AnnotationCachingAttributeSource" />

    <bean id="cachingInterceptor" class="org.springmodules.cache.interceptor.caching.MetadataCachingInterceptor">
        <property name="cacheProviderFacade" ref="cacheProviderFacade" />
        <property name="cachingAttributeSource" ref="cachingAttributeSource" />
        <property name="cachingModels">
            <props>
                <prop key="getCharactersModel">cacheName=getCharacters</prop>
            </props>
        </property>
    </bean>

    <bean id="cachingAttributeSourceAdvisor" class="org.springmodules.cache.interceptor.caching.CachingAttributeSourceAdvisor">
        <constructor-arg ref="cachingInterceptor" />
    </bean>


	-->
	<!--  -->

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="org.h2.Driver" />
		<property name="url" value="${jdbcUrl}" />
		<property name="username" value="${jdbcUser}" />
		<property name="password" value="${jdbcPassword}" />
	</bean>

	<bean id="hibernateJpaDialect" class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceXmlLocation" value="classpath:/persistence.xml" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="showSql" value="true" />
				<property name="generateDdl" value="true" />
				<property name="databasePlatform"
					value="org.weinschenker.demowebapp.persistence.MyH2Dialect" />
			</bean>
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.dialect">org.weinschenker.demowebapp.persistence.MyH2Dialect
				</prop>
				<!-- prop key="hibernate.hbm2ddl.auto">validate</prop -->
			</props>
		</property>
		<property name="jpaDialect" ref="hibernateJpaDialect" />
		<property name="persistenceUnitName" value="eve" />
	</bean>

	<bean id="sessionFactory" factory-bean="entityManagerFactory"
		factory-method="getSessionFactory" />

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<tx:annotation-driven />

	<bean
		class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />

	<bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/tiles-config/tiles-def.xml</value>
			</list>
		</property>
	</bean>

	<bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView"></property>
		<property name="prefix" value="/WEB-INF/example/tiles/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>

	<bean name="eveApiHost" class="java.lang.String">
		<constructor-arg>
			<value>${eveApiHost}</value>
		</constructor-arg>
	</bean>
	<bean name="eveApistubSkilltree" class="java.lang.String">
		<constructor-arg>
			<value>${eveApistubSkilltree}</value>
		</constructor-arg>
	</bean>
	<bean name="eveApiChars" class="java.lang.String">
		<constructor-arg>
			<value>${eveApiChars}</value>
		</constructor-arg>
	</bean>
	<bean name="eveUserId" class="java.lang.String">
		<constructor-arg>
			<value>${eveUserId}</value>
		</constructor-arg>
	</bean>
	<bean name="eveApiKey" class="java.lang.String">
		<constructor-arg>
			<value>${eveApiKey}</value>
		</constructor-arg>
	</bean>

	<!--
		<bean id="cacheProvider"
		class="org.springmodules.cache.provider.ehcache.EhCacheFacade">
		<property name="cacheManager" ref="cacheManager" /> </bean> <bean
		id="cacheManager"
		class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation" value="classpath:ehcache.xml" />
		</bean> <bean id="cachingAttributeSource"
		class="org.springmodules.cache.annotations.AnnotationCachingAttributeSource"
		/> <bean id="cachingInterceptor"
		class="org.springmodules.cache.interceptor.caching.MetadataCachingInterceptor">
		<property name="cacheProviderFacade" ref="cacheProvider" /> <property
		name="cachingAttributeSource" ref="cachingAttributeSource" />
		<property name="cachingModels"> <props> <prop
		key="getCharactersModel">cacheName=getCharacters</prop> </props>
		</property> </bean> <bean id="cachingAttributeSourceAdvisor"
		class="org.springmodules.cache.interceptor.caching.CachingAttributeSourceAdvisor">
		<constructor-arg ref="cachingInterceptor" /> </bean> <bean
		id="flushingAttributeSource"
		class="org.springmodules.cache.annotations.AnnotationFlushingAttributeSource"></bean>

		<bean id="flushingInterceptor"
		class="org.springmodules.cache.interceptor.flush.MetadataFlushingInterceptor">
		<property name="cacheProviderFacade" ref="cacheProvider" /> <property
		name="flushingAttributeSource" ref="flushingAttributeSource" />
		<property name="flushingModels"> <props> <prop
		key="getCharactersFlushingModel">cacheNames=getCharacters</prop>
		</props> </property> </bean> <bean id="flushingAttributeSourceAdvisor"
		class="org.springmodules.cache.interceptor.flush.FlushingAttributeSourceAdvisor">
		<constructor-arg ref="flushingInterceptor" /> </bean>
	-->

</beans>